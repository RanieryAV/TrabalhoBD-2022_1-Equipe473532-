-- MySQL Script generated by MySQL Workbench
-- 06/20/22 21:37:31
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema equipe473532
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema equipe473532
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `equipe473532` DEFAULT CHARACTER SET utf8mb4 ;
USE `equipe473532` ;

-- -----------------------------------------------------
-- Table `equipe473532`.`categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `equipe473532`.`categoria` (
  `codigo_da_categoria` INT NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`codigo_da_categoria`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `equipe473532`.`cursos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `equipe473532`.`cursos` (
  `cod_curso` INT NOT NULL,
  `nome_curso` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`cod_curso`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe473532`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `equipe473532`.`usuarios` (
  `id` INT NOT NULL,
  `login` VARCHAR(45) NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  `tipo_usuario` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe473532`.`alunos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `equipe473532`.`alunos` (
  `matricula_aluno` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `cod_curso` INT NOT NULL,
  `endereco` VARCHAR(45) NOT NULL,
  `data_de_ingresso` DATE NOT NULL,
  `data_de_conclusao_prevista` DATE NOT NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`matricula_aluno`, `id_usuario`),
  INDEX `cod_curso_idx` (`cod_curso` ASC),
  INDEX `fk_alunos_usuarios1_idx` (`id_usuario` ASC),
  CONSTRAINT `cod_curso`
    FOREIGN KEY (`cod_curso`)
    REFERENCES `equipe473532`.`cursos` (`cod_curso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_alunos_usuarios1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `equipe473532`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe473532`.`telefones_alunos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `equipe473532`.`telefones_alunos` (
  `telefone_ID` INT NOT NULL,
  `numero_telefone` VARCHAR(45) NOT NULL,
  `matricula_aluno` INT NOT NULL,
  PRIMARY KEY (`telefone_ID`),
  INDEX `matricula_aluno_idx` (`matricula_aluno` ASC),
  CONSTRAINT `matricula_aluno`
    FOREIGN KEY (`matricula_aluno`)
    REFERENCES `equipe473532`.`alunos` (`matricula_aluno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe473532`.`professores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `equipe473532`.`professores` (
  `mat_siape` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `endereco` VARCHAR(45) NOT NULL,
  `telefone_celular` VARCHAR(45) NOT NULL,
  `cod_curso` INT NOT NULL,
  `data_de_contratacao` DATE NOT NULL,
  `regime_de_trabalho` VARCHAR(45) NOT NULL,
  `id_usuario` INT NOT NULL,
  `professorescol` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`mat_siape`, `id_usuario`),
  INDEX `cod_curso_idx` (`cod_curso` ASC),
  INDEX `fk_professores_usuarios1_idx` (`id_usuario` ASC),
  CONSTRAINT `cod_curso`
    FOREIGN KEY (`cod_curso`)
    REFERENCES `equipe473532`.`cursos` (`cod_curso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_professores_usuarios1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `equipe473532`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe473532`.`funcionarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `equipe473532`.`funcionarios` (
  `matricula_funcionario` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `endereco` VARCHAR(45) NOT NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`matricula_funcionario`, `id_usuario`),
  INDEX `fk_funcionarios_usuarios1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_funcionarios_usuarios1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `equipe473532`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe473532`.`telefones_funcionarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `equipe473532`.`telefones_funcionarios` (
  `telefone_ID` INT NOT NULL,
  `numero_telefone` VARCHAR(45) NOT NULL,
  `matricula_funcionario` INT NOT NULL,
  PRIMARY KEY (`telefone_ID`),
  INDEX `matricula_funcionario_idx` (`matricula_funcionario` ASC),
  CONSTRAINT `matricula_funcionario`
    FOREIGN KEY (`matricula_funcionario`)
    REFERENCES `equipe473532`.`funcionarios` (`matricula_funcionario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe473532`.`autores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `equipe473532`.`autores` (
  `email` VARCHAR(60) NOT NULL,
  `nome` VARCHAR(60) NOT NULL,
  `nacionalidade` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`email`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe473532`.`livros`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `equipe473532`.`livros` (
  `ISBN` BIGINT NOT NULL,
  `titulo` VARCHAR(90) NOT NULL,
  `ano_lancamento` YEAR NOT NULL,
  `editora` VARCHAR(50) NOT NULL,
  `quantidade_copias` BIGINT NOT NULL,
  `categoria_codigo_da_categoria` INT NOT NULL,
  UNIQUE INDEX `ISBN_UNIQUE` (`ISBN` ASC),
  PRIMARY KEY (`ISBN`),
  INDEX `fk_livros_categoria1_idx` (`categoria_codigo_da_categoria` ASC),
  CONSTRAINT `fk_livros_categoria1`
    FOREIGN KEY (`categoria_codigo_da_categoria`)
    REFERENCES `equipe473532`.`categoria` (`codigo_da_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe473532`.`Escreve`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `equipe473532`.`Escreve` (
  `autores_email` VARCHAR(60) NOT NULL,
  `livros_ISBN` BIGINT NOT NULL,
  PRIMARY KEY (`autores_email`, `livros_ISBN`),
  INDEX `fk_autores_has_livros_livros1_idx` (`livros_ISBN` ASC),
  INDEX `fk_autores_has_livros_autores1_idx` (`autores_email` ASC),
  CONSTRAINT `fk_autores_has_livros_autores1`
    FOREIGN KEY (`autores_email`)
    REFERENCES `equipe473532`.`autores` (`email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_autores_has_livros_livros1`
    FOREIGN KEY (`livros_ISBN`)
    REFERENCES `equipe473532`.`livros` (`ISBN`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe473532`.`reserva`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `equipe473532`.`reserva` (
  `usuarios_id` INT NOT NULL,
  `livros_ISBN` BIGINT NOT NULL,
  PRIMARY KEY (`usuarios_id`, `livros_ISBN`),
  INDEX `fk_usuarios_has_livros_livros1_idx` (`livros_ISBN` ASC),
  INDEX `fk_usuarios_has_livros_usuarios1_idx` (`usuarios_id` ASC),
  CONSTRAINT `fk_usuarios_has_livros_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `equipe473532`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuarios_has_livros_livros1`
    FOREIGN KEY (`livros_ISBN`)
    REFERENCES `equipe473532`.`livros` (`ISBN`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- -----------------------------------------------------
-- Povoamento das tabelas
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Povoando a tabela de categoria
-- -----------------------------------------------------

INSERT INTO categoria VALUES(1, 'Ação');
INSERT INTO categoria VALUES(2, 'Ficção');
INSERT INTO categoria VALUES(3, 'Romance');
INSERT INTO categoria VALUES(4, 'Infantil');
INSERT INTO categoria VALUES(5, 'Fantasia');
INSERT INTO categoria VALUES(6, 'Auto-Ajuda');
INSERT INTO categoria VALUES(7, 'Administração');
INSERT INTO categoria VALUES(8, 'Terror');

-- -----------------------------------------------------
-- Povoando a tabela de Autores 
-- -----------------------------------------------------

INSERT INTO autores VALUES('anabeatrizbarbosa@hotmail.com', 'Ana Beatriz Barbosa Silva', 'Brasileira');
INSERT INTO autores VALUES('suzannecollins@hotmail.com','Suzanne Collins', 'Americana');
INSERT INTO autores VALUES('jkrowling@hotmail.com','J. K. Rowling', 'Britanica');
INSERT INTO autores VALUES('rhondabyrne@hotmail.com','Rhonda Byrne ', 'Australiana');

-- -----------------------------------------------------
-- Povoando a tabela de Cursos 
-- -----------------------------------------------------

INSERT INTO cursos VALUES(01, 'Engenharia de Computação');
INSERT INTO cursos VALUES(02, 'Engenharia Elétrica');
INSERT INTO cursos VALUES(03, 'Psicologia');
INSERT INTO cursos VALUES(04, 'Medicina');
INSERT INTO cursos VALUES(05, 'Artes Cênicas');
INSERT INTO cursos VALUES(06, 'Filosofia');

-- -----------------------------------------------------
-- Povoando a tabela de Usuarios
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Povoando a tabela de Funcionarios
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Povoando a tabela de Telefones_Funcionarios
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Povoando a tabela de Professores
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Povoando a tabela de Alunos
-- -----------------------------------------------------
INSERT INTO alunos VALUES(0000001, 'Samuel Falcão Xavier', '01', 'Rua A', '2015-02-25', '2019-12-31');
INSERT INTO alunos VALUES(0000002, 'Raíssa Frois Camarinho', '02', 'Rua B', '2016-07-25', '2021-07-15');
INSERT INTO alunos VALUES(0000003, 'Nataniel Sardo Grilo', '03', 'Rua C', '2016-02-25', '2020-12-31');
INSERT INTO alunos VALUES(0000004, 'André Mourão Taveiros', '04', 'Rua D', '2017-02-25', '2022-12-31');
INSERT INTO alunos VALUES(0000005, 'Virgínia Vaz Caeira', '05', 'Rua E', '2018-07-25', '2022-07-15');
INSERT INTO alunos VALUES(0000006, 'Lucas Dantas Abranches', '06', 'Rua F', '2019-02-25', '2022-12-31');

-- -----------------------------------------------------
-- Povoando a tabela de Telefones_Alunos
-- -----------------------------------------------------
INSERT INTO telefones_alunos VALUES(001, '+5504188912345678', 0000001);
INSERT INTO telefones_alunos VALUES(002, '+5504188998765432', 0000001);
INSERT INTO telefones_alunos VALUES(003, '+5504188951697843', 0000002);
INSERT INTO telefones_alunos VALUES(004, '+5504188961475298', 0000003);
INSERT INTO telefones_alunos VALUES(005, '+5504188995387459', 0000004);
INSERT INTO telefones_alunos VALUES(006, '+5504188994381576', 0000005);
INSERT INTO telefones_alunos VALUES(007, '+5504188957894314', 0000006);
